using 'c = :stdc;
main(arg-c:intc, arg-v:char[][]):intc {
   if (arg-c != 3) {
      'c.printf("Usage: %s [.h input file] [.cp1 output file]\n", arg-v[0]);
      'c.exit(#failure);
   }
   if !('c:fd.open(++in-fd, arg-v[1], #read)) {
      'c.printf("Cannot open file for reading: %s\n", arg-v[1]);
      'c.exit(#failure);
   }
   +in-size = in-fd.seek(0, #end);
   in-fd.seek(0, #set);
   {+in-data:char[] = 'c.malloc(in-size)}
   in-fd.read(in-data, in-size);
   in-fd.close();
   if !(&&, in-size > 0, in-data[in-size - 1] == ''\n) {
      'c.printf("Error, file '%s' does not end with a new line\n", arg-v[1]);
      'c.exit(#failure);
   }
   +pos = 0;
   +out-f = 'c.fopen(arg-v[2], "w");
   out-f.printf(
      "{at(:cp1)\n"
      ":token[\n"
      "#nil,\n");
   {while(pos < in-size)
      +start = pos;
      {do()
         if (in-data[pos] == ''\n) {
            break;
         }
         pos++;
      }
      +len = pos - start;
      {+line:char[] = & in-data[start]}
      {+push:char[32]}
      +push-c = 0;
      {do{+i = 18}{(len - 18) i++}
         if (&&, line[i] >= ''0, line[i] <= ''9) {
            push[push-c++] = line[i];
         } elif (&&, line[i] >= ''a, line[i] <= ''z) {
            push[push-c++] = line[i];
         } elif (&&, line[i] >= ''A, line[i] <= ''Z) {
            push[push-c++] = line[i] + (''a - ''A);
         } elif (line[i] == ''_) {
            push[push-c++] = ''-;
         } else {
            break;
         }
      }
      // 'c.printf("[%.*s]\n", len, line);
      out-f.printf("#%.*s,\n", push-c, push);
      pos++;
   }
   out-f.printf(
      "]:u32 {\n"
      "cp1-name(e:this):char[] @cp1-name;\n"
      "}\n"
      "}\n");
   out-f.close();
   return 0;
}
