{alias 'glc = %glc}
{at(%glc)
{expr-char(value:int):expr-i
   quick-alloc-one(+(e:expr-char));
   +e-idx = expr-push(e.base, #char);
   e.value = value;
   :return e-idx;
}
{write-char(c:char)}
{at(:expr-i)
   {wr-char(expr`:expr, w`:wtr, header:bool) @case.wr() @inline
      {+e`:expr-char = expr}
      w.n(e.value);
   }
   {rd-char(e-idx`:expr-i, r`:rdr) @case.rd() @inline
      quick-alloc-one(+(e`:expr-char));
      e-idx.set(e.base, #char);
      e.value = r.n();
   }
   {write-char(expr`:expr) @case.write() @inline
      {+e`:expr-char = expr}
      `.write-char(e.value);
   }
   {process-char(expr`:expr, ok:bool&) @case.process() @inline
      ok = :true;
   }
   {type-char(expr`:expr, at`:at&) @case.type() @inline
      at = basic-type(#char);
   }
   {value-char(le:this, ref:int, paren:bool, v`:value, ok:bool&) @case.value() @inline
      v.type = basic-type(#char);
      v.info.init();
      v.info.array-c = 0;
      v.info.ref-v[0] = ''\0;
      v.info.star-c = 0;
      v.ref = 1;
      v.paren = :false;
      ok = :true;
   }
}
 

}
