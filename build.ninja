rule c
 command = clang $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. -c $in -o $out

rule cpp
 command = clang++ $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. -c $in -o $out

rule ld-c
 command = clang $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. $in -o $out

rule ld-cpp
 command = clang++ $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. $in -o $out

build out/parser.cgl.c.o: c parser.cgl.c
build out/parser.c.o: c parser.c | export.h lexer.c cgl_parser.c
build bin/cgl-parser: ld-cpp out/parser.cgl.c.o out/parser.c.o out/hashtable.cpp.o
build out/compiler.cgl.c.o: c compiler.cgl.c
build out/str.c.o: c str.c
build bin/cgl-compiler: ld-cpp out/compiler.cgl.c.o out/str.c.o out/hashtable.cpp.o
build bin/cgl: ld-c cgl.cgl.c

rule c2
 command = clang $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DGLC_NEW -I. -c $in -o $out

rule cpp2
 command = clang++ $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DGLC_NEW -I. -c $in -o $out

rule ld-c2
 command = clang $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DGLC_NEW -I. $in -o $out

rule ld-cpp2
 command = clang++ $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DGLC_NEW -I. $in -o $out

rule re2c
 command = re2c --input-encoding utf8 --utf8 $in -o $out

rule ld-unsanitized
 command = clang -I. $in -o $out

rule lemon
 restat = true
 command = out/lemon -dout $in

rule node
 command = node $in $out

rule cgl-c
 restat = true
 command = bin/cgl c $out $in

rule run
 command = $in $out

build out/hash-table-size: ld-cpp2 hashtable.cpp
 flags = -DGLC_GET_SIZE
build out/hash-table-size.cgl: run out/hash-table-size

build out/token.cgl: node token.cgl.js | out/cgl_parser.h
build out/compiler-common.cgl out/parser-common.cgl: node split.js cgl/common.cgl
build out/cgl.cgl.c: cgl-c cgl/cgl.cgl stdc/stdio.cgl stdc/fcntl.cgl stdc/stdlib.cgl stdc/unistd.cgl stdc/string.cgl sys/stat.cgl | bin/cgl bin/cgl-parser bin/cgl-compiler
build out/parser2.cgl.c: cgl-c cgl/parser.cgl cgl/preprocess.cgl out/token.cgl cgl/break.cgl cgl/math.cgl cgl/bools.cgl cgl/str.cgl cgl/cvar.cgl cgl/unary.cgl cgl/ref.cgl cgl/cast.cgl cgl/index.cgl cgl/switch.cgl cgl/if.cgl cgl/do.cgl cgl/while.cgl cgl/compare.cgl cgl/bool.cgl cgl/char.cgl cgl/call.cgl cgl/null.cgl cgl/int.cgl cgl/size.cgl cgl/assign.cgl cgl/fvar.cgl cgl/gvar.cgl cgl/continue.cgl cgl/return.cgl cgl/space.cgl cgl/export.cgl cgl/rdr.cgl cgl/wtr.cgl cgl/var.cgl cgl/func.cgl cgl/lvar.cgl cgl/enum.cgl cgl/expr.cgl cgl/stmt.cgl out/parser-common.cgl cgl/struct.cgl stdc/stdio.cgl stdc/fcntl.cgl stdc/stdlib.cgl stdc/unistd.cgl stdc/string.cgl sys/stat.cgl out/hash-table-size.cgl | bin/cgl bin/cgl-parser bin/cgl-compiler
build out/compiler2.cgl.c: cgl-c cgl/compiler.cgl out/compiler-common.cgl cgl/rdr.cgl cgl/wtr.cgl cgl/func.cgl cgl/struct.cgl cgl/enum.cgl cgl/expr.cgl cgl/stmt.cgl cgl/var.cgl cgl/assign.cgl cgl/compare.cgl cgl/bool.cgl cgl/char.cgl cgl/math.cgl cgl/unary.cgl cgl/ref.cgl cgl/cast.cgl cgl/lvar.cgl cgl/fvar.cgl cgl/gvar.cgl cgl/cvar.cgl cgl/bools.cgl cgl/call.cgl cgl/str.cgl cgl/int.cgl cgl/size.cgl cgl/null.cgl cgl/index.cgl cgl/if.cgl cgl/switch.cgl cgl/do.cgl cgl/while.cgl cgl/continue.cgl cgl/break.cgl cgl/return.cgl cgl/space.cgl cgl/export.cgl stdc/stdio.cgl stdc/fcntl.cgl stdc/stdlib.cgl stdc/unistd.cgl stdc/string.cgl out/hash-table-size.cgl | bin/cgl bin/cgl-parser bin/cgl-compiler
build out/export.h: node export.js out/parser2.cgl.c
build out/lexer.c: re2c lexer-re2c.c
build out/lemon: ld-unsanitized lemon.c
build out/cgl_parser.c out/cgl_parser.h: lemon cgl_parser.y | out/lemon
build out/cgl: ld-c2 out/cgl.cgl.c
build out/parser2.cgl.c.o: c2 out/parser2.cgl.c
build out/parser2.c.o: c2 parser2.c | out/export.h out/lexer.c out/cgl_parser.c
build out/hashtable.cpp.o: cpp2 hashtable.cpp
build out/cgl-parser: ld-cpp2 out/parser2.cgl.c.o out/parser2.c.o out/hashtable.cpp.o
build out/compiler2.cgl.c.o: c2 out/compiler2.cgl.c
build out/str2.c.o: c2 str2.c
build out/cgl-compiler: ld-cpp2 out/compiler2.cgl.c.o out/str2.c.o out/hashtable.cpp.o
