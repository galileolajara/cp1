rule c
 command = clang $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. -c $in -o $out

rule cpp
 command = clang++ $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. -c $in -o $out

rule ld-c
 command = clang $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. $in -o $out

rule ld-cpp
 command = clang++ $flags -O3 -flto -Werror=format -Wno-incompatible-pointer-types -I. $in -o $out

build out/parser.cp1.c.o: c parser.cp1.c
build out/parser.c.o: c parser.c | export.h lexer.c cp1_parser.c
build bin/cp1-parser: ld-cpp out/parser.cp1.c.o out/parser.c.o out/hashtable.cpp.o
build out/compiler.cp1.c.o: c compiler.cp1.c
build out/str.c.o: c str.c
build bin/cp1-compiler: ld-cpp out/compiler.cp1.c.o out/str.c.o out/hashtable.cpp.o
build bin/cp1: ld-c cp1.cp1.c

rule c2
 command = clang $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DCP1_NEW -I. -c $in -o $out

rule cpp2
 command = clang++ $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DCP1_NEW -I. -c $in -o $out

rule ld-c2
 command = clang $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DCP1_NEW -I. $in -o $out

rule ld-cpp2
 command = clang++ $flags -O0 -Werror=format -Wno-incompatible-pointer-types -DCP1_NEW -I. $in -o $out

rule re2c
 command = re2c --input-encoding utf8 --utf8 $in -o $out

rule ld-unsanitized
 command = clang -I. $in -o $out

rule lemon
 restat = true
 command = out/lemon -dout $in

rule parser
 command = bin/cp1-parser $in $out

rule compiler
 command = bin/cp1-compiler $in $out

rule run
 command = $in $out

build out/hash-table-size: ld-cpp2 hashtable.cpp
 flags = -DCP1_GET_SIZE
build out/hash-table-size.cp1: run out/hash-table-size

build out/tmp/token.cp1-b: parser token.cp1 | bin/cp1-parser
build out/token.cp1.c: compiler out/tmp/token.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b | bin/cp1-compiler
build out/token: ld-c2 out/token.cp1.c
build out/token.cp1: run out/token out/cp1_parser.h
build out/tmp/split.cp1-b: parser split.cp1 | bin/cp1-parser
build out/split.cp1.c: compiler out/tmp/split.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b | bin/cp1-compiler
build out/split: ld-c2 out/split.cp1.c
build out/parser-common.cp1 out/compiler-common.cp1: run out/split cp1/common.cp1
build out/tmp/cp1/cp1.cp1-b: parser cp1/cp1.cp1 | bin/cp1-parser
build out/tmp/include/stdc/stdio.cp1-b: parser include/stdc/stdio.cp1 | bin/cp1-parser
build out/tmp/include/stdc/fcntl.cp1-b: parser include/stdc/fcntl.cp1 | bin/cp1-parser
build out/tmp/include/stdc/stdlib.cp1-b: parser include/stdc/stdlib.cp1 | bin/cp1-parser
build out/tmp/include/stdc/unistd.cp1-b: parser include/stdc/unistd.cp1 | bin/cp1-parser
build out/tmp/include/stdc/string.cp1-b: parser include/stdc/string.cp1 | bin/cp1-parser
build out/tmp/include/sys/stat.cp1-b: parser include/sys/stat.cp1 | bin/cp1-parser
build out/cp1.cp1.c: compiler out/tmp/cp1/cp1.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b out/tmp/include/sys/stat.cp1-b | bin/cp1-compiler
build out/tmp/cp1/preprocess.cp1-b: parser cp1/preprocess.cp1 | bin/cp1-parser
build out/preprocess.cp1.c: compiler out/tmp/cp1/preprocess.cp1-b out/tmp/cp1/wtr.cp1-b out/tmp/cp1/rdr.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b out/tmp/include/sys/stat.cp1-b | bin/cp1-compiler
build out/tmp/cp1/parser.cp1-b: parser cp1/parser.cp1 | bin/cp1-parser
build out/tmp/out/token.cp1-b: parser out/token.cp1 | bin/cp1-parser
build out/tmp/cp1/break.cp1-b: parser cp1/break.cp1 | bin/cp1-parser
build out/tmp/cp1/math.cp1-b: parser cp1/math.cp1 | bin/cp1-parser
build out/tmp/cp1/bools.cp1-b: parser cp1/bools.cp1 | bin/cp1-parser
build out/tmp/cp1/str.cp1-b: parser cp1/str.cp1 | bin/cp1-parser
build out/tmp/cp1/cvar.cp1-b: parser cp1/cvar.cp1 | bin/cp1-parser
build out/tmp/cp1/unary.cp1-b: parser cp1/unary.cp1 | bin/cp1-parser
build out/tmp/cp1/ref.cp1-b: parser cp1/ref.cp1 | bin/cp1-parser
build out/tmp/cp1/cast.cp1-b: parser cp1/cast.cp1 | bin/cp1-parser
build out/tmp/cp1/index.cp1-b: parser cp1/index.cp1 | bin/cp1-parser
build out/tmp/cp1/switch.cp1-b: parser cp1/switch.cp1 | bin/cp1-parser
build out/tmp/cp1/if.cp1-b: parser cp1/if.cp1 | bin/cp1-parser
build out/tmp/cp1/do.cp1-b: parser cp1/do.cp1 | bin/cp1-parser
build out/tmp/cp1/while.cp1-b: parser cp1/while.cp1 | bin/cp1-parser
build out/tmp/cp1/compare.cp1-b: parser cp1/compare.cp1 | bin/cp1-parser
build out/tmp/cp1/bool.cp1-b: parser cp1/bool.cp1 | bin/cp1-parser
build out/tmp/cp1/char.cp1-b: parser cp1/char.cp1 | bin/cp1-parser
build out/tmp/cp1/call.cp1-b: parser cp1/call.cp1 | bin/cp1-parser
build out/tmp/cp1/null.cp1-b: parser cp1/null.cp1 | bin/cp1-parser
build out/tmp/cp1/int.cp1-b: parser cp1/int.cp1 | bin/cp1-parser
build out/tmp/cp1/size.cp1-b: parser cp1/size.cp1 | bin/cp1-parser
build out/tmp/cp1/assign.cp1-b: parser cp1/assign.cp1 | bin/cp1-parser
build out/tmp/cp1/fvar.cp1-b: parser cp1/fvar.cp1 | bin/cp1-parser
build out/tmp/cp1/gvar.cp1-b: parser cp1/gvar.cp1 | bin/cp1-parser
build out/tmp/cp1/continue.cp1-b: parser cp1/continue.cp1 | bin/cp1-parser
build out/tmp/cp1/return.cp1-b: parser cp1/return.cp1 | bin/cp1-parser
build out/tmp/cp1/space.cp1-b: parser cp1/space.cp1 | bin/cp1-parser
build out/tmp/cp1/export.cp1-b: parser cp1/export.cp1 | bin/cp1-parser
build out/tmp/cp1/rdr.cp1-b: parser cp1/rdr.cp1 | bin/cp1-parser
build out/tmp/cp1/wtr.cp1-b: parser cp1/wtr.cp1 | bin/cp1-parser
build out/tmp/cp1/var.cp1-b: parser cp1/var.cp1 | bin/cp1-parser
build out/tmp/cp1/func.cp1-b: parser cp1/func.cp1 | bin/cp1-parser
build out/tmp/cp1/lvar.cp1-b: parser cp1/lvar.cp1 | bin/cp1-parser
build out/tmp/cp1/enum.cp1-b: parser cp1/enum.cp1 | bin/cp1-parser
build out/tmp/cp1/expr.cp1-b: parser cp1/expr.cp1 | bin/cp1-parser
build out/tmp/cp1/stmt.cp1-b: parser cp1/stmt.cp1 | bin/cp1-parser
build out/tmp/out/parser-common.cp1-b: parser out/parser-common.cp1 | bin/cp1-parser
build out/tmp/cp1/struct.cp1-b: parser cp1/struct.cp1 | bin/cp1-parser
build out/tmp/out/hash-table-size.cp1-b: parser out/hash-table-size.cp1 | bin/cp1-parser
build out/parser2.cp1.c: compiler out/tmp/cp1/parser.cp1-b out/tmp/out/token.cp1-b out/tmp/cp1/break.cp1-b out/tmp/cp1/math.cp1-b out/tmp/cp1/bools.cp1-b out/tmp/cp1/str.cp1-b out/tmp/cp1/cvar.cp1-b out/tmp/cp1/unary.cp1-b out/tmp/cp1/ref.cp1-b out/tmp/cp1/cast.cp1-b out/tmp/cp1/index.cp1-b out/tmp/cp1/switch.cp1-b out/tmp/cp1/if.cp1-b out/tmp/cp1/do.cp1-b out/tmp/cp1/while.cp1-b out/tmp/cp1/compare.cp1-b out/tmp/cp1/bool.cp1-b out/tmp/cp1/char.cp1-b out/tmp/cp1/call.cp1-b out/tmp/cp1/null.cp1-b out/tmp/cp1/int.cp1-b out/tmp/cp1/size.cp1-b out/tmp/cp1/assign.cp1-b out/tmp/cp1/fvar.cp1-b out/tmp/cp1/gvar.cp1-b out/tmp/cp1/continue.cp1-b out/tmp/cp1/return.cp1-b out/tmp/cp1/space.cp1-b out/tmp/cp1/export.cp1-b out/tmp/cp1/rdr.cp1-b out/tmp/cp1/wtr.cp1-b out/tmp/cp1/var.cp1-b out/tmp/cp1/func.cp1-b out/tmp/cp1/lvar.cp1-b out/tmp/cp1/enum.cp1-b out/tmp/cp1/expr.cp1-b out/tmp/cp1/stmt.cp1-b out/tmp/out/parser-common.cp1-b out/tmp/cp1/struct.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b out/tmp/include/sys/stat.cp1-b out/tmp/out/hash-table-size.cp1-b | bin/cp1-compiler
build out/tmp/cp1/compiler.cp1-b: parser cp1/compiler.cp1 | bin/cp1-parser
build out/tmp/out/compiler-common.cp1-b: parser out/compiler-common.cp1 | bin/cp1-parser
build out/compiler2.cp1.c: compiler out/tmp/cp1/compiler.cp1-b out/tmp/out/compiler-common.cp1-b out/tmp/cp1/rdr.cp1-b out/tmp/cp1/wtr.cp1-b out/tmp/cp1/func.cp1-b out/tmp/cp1/struct.cp1-b out/tmp/cp1/enum.cp1-b out/tmp/cp1/expr.cp1-b out/tmp/cp1/stmt.cp1-b out/tmp/cp1/var.cp1-b out/tmp/cp1/assign.cp1-b out/tmp/cp1/compare.cp1-b out/tmp/cp1/bool.cp1-b out/tmp/cp1/char.cp1-b out/tmp/cp1/math.cp1-b out/tmp/cp1/unary.cp1-b out/tmp/cp1/ref.cp1-b out/tmp/cp1/cast.cp1-b out/tmp/cp1/lvar.cp1-b out/tmp/cp1/fvar.cp1-b out/tmp/cp1/gvar.cp1-b out/tmp/cp1/cvar.cp1-b out/tmp/cp1/bools.cp1-b out/tmp/cp1/call.cp1-b out/tmp/cp1/str.cp1-b out/tmp/cp1/int.cp1-b out/tmp/cp1/size.cp1-b out/tmp/cp1/null.cp1-b out/tmp/cp1/index.cp1-b out/tmp/cp1/if.cp1-b out/tmp/cp1/switch.cp1-b out/tmp/cp1/do.cp1-b out/tmp/cp1/while.cp1-b out/tmp/cp1/continue.cp1-b out/tmp/cp1/break.cp1-b out/tmp/cp1/return.cp1-b out/tmp/cp1/space.cp1-b out/tmp/cp1/export.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b out/tmp/out/hash-table-size.cp1-b | bin/cp1-compiler
build out/tmp/export.cp1-b: parser export.cp1 | bin/cp1-parser
build out/export.cp1.c: compiler out/tmp/export.cp1-b out/tmp/include/stdc/stdio.cp1-b out/tmp/include/stdc/stdlib.cp1-b out/tmp/include/stdc/fcntl.cp1-b out/tmp/include/stdc/unistd.cp1-b out/tmp/include/stdc/string.cp1-b | bin/cp1-compiler
build out/cp1-preprocess: ld-c2 out/preprocess.cp1.c
build out/export: ld-c2 out/export.cp1.c
build out/export.h: run out/export out/parser2.cp1.c
build out/lexer.c: re2c lexer-re2c.c
build out/lemon: ld-unsanitized lemon.c
build out/cp1_parser.c out/cp1_parser.h: lemon cp1_parser.y | out/lemon
build out/cp1: ld-c2 out/cp1.cp1.c
build out/parser2.cp1.c.o: c2 out/parser2.cp1.c
build out/parser2.c.o: c2 parser2.c | out/export.h out/lexer.c out/cp1_parser.c
build out/hashtable.cpp.o: cpp2 hashtable.cpp
build out/cp1-parser: ld-cpp2 out/parser2.cp1.c.o out/parser2.c.o out/hashtable.cpp.o
build out/compiler2.cp1.c.o: c2 out/compiler2.cp1.c
build out/str2.c.o: c2 str2.c
build out/cp1-compiler: ld-cpp2 out/compiler2.cp1.c.o out/str2.c.o out/hashtable.cpp.o
