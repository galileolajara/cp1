include <stdio.h> {
   using C = LibC;
   using X = Posix;
   using LibC {
      printf(fmt:char @const[]):intc @var-args @no-decl @real-name;
      sprintf(str:char[], fmt:char @const[]):intc @var-args @no-decl @real-name;
      scanf(fmt:char @const[]):intc @var-args @no-decl @real-name;
      sscanf(str:char[], fmt:char @const[]):intc @var-args @no-decl @real-name;

      var out:File @no-decl(stdout);
      struct File[] @no-decl(FILE) {
         printf(f:this, str:char @const[]):intc @var-args @no-decl(fprintf);
         flush(f:this):intc @no-decl(fflush);
         write(f:this, buf:ref, size:usz):usz @inline {
            return fwrite(buf, 1, size, f);
         }
         putc(c:intc, f:this):intc @no-decl(fputc);
         close(f:this):intc @no-decl(fclose);
      }
      rename(old:char[], new:char[]):intc @no-decl @real-name;
      fopen(path:char[], mode:char[]):File @no-decl @real-name;
      fdopen(fd:X.Fd, mode:char[]):File @no-decl @real-name;
      fclose(f:File):intc @no-decl @real-name;
      fwrite(buf:ref, size1:usz, size2:usz, f:File):usz @no-decl @real-name;
      tempnam(dir:char[], pfx:char[]):char[] @no-decl @real-name;
      perror(str:char @const[]) @no-decl @real-name;
   }
}
