{alias 'glc = %glc}
{alias 'c = %stdc}
{at(%glc)
{/rdr(
   .ref`ref,
   .pos`size,
   .1`tnum[],
   .char`char[],
   .4`num[],
   ) @union
   {:n1(r`this)`tnum @inline;
      +val = r.1[0];
      r.pos++;
      {return val}
   }
   {:n2(r`this)`num @inline;
      +val = r.1[0]`num;
      val |= r.1[1] << 8;
      r.pos += 2;
      {return val}
   }
   {:n4(r`this)`num @inline;
      +val = r.1[0]`num;
      val |= r.1[1] << 8;
      val |= r.1[2] << 16;
      val |= r.1[3] << 24;
      r.pos += 4;
      {return val}
   }
   {:id(r`this)\id @inline;
      {return r:n}
   }
   `` {include("num.c")
      {:n(r`this)`num @real-name(Fgetnum) @no-decl}
   `` }
   {:tok(r`this)\token @inline;
      {return r:n1}
   }
   {:copy(r`this, data`ref, size`int) @inline;
      'c:memcpy(data, r.ref, size);
      r.pos += size;
   }
   {:bool(r`this)`bool @inline;
      {return r:n1 != 0}
   }
   {:set(r`this, ref`ref) @inline;
      r.ref = ref;
   }
}
 

}
