#include <stdio.h>
#include <math.h>
using C = LibC;

enum Direction[#right, #up, #left, #down]:u8 { // An 8-bit unsigned enum
   string(e:this):char[] { // An example method for enums
      switch e {
         case #right { return "right" }
         case #up { return "up" }
         case #left { return "left" }
         case #down { return "down" }
         default { return "error" }
      }
   }
}

struct Position[x:i32, y:i32] { // A struct
   go(pos:this, dir:Direction) {
      switch dir {
         case #right { pos.x++ }
         case #up { pos.y++ }
         case #left { pos.x-- }
         case #down { pos.y-- }
      }
   }
}

main():intc { // intc is for compatibility with C's int, prefer to use i32 elsewhere
   C.printf("Hello world!\n");

   +one = 1; // '+' is the quickest way to declare a variable
   +seven = 7;
   +sum = one + seven;
   C.printf("%d + %d = %d\n", one, seven, sum);

   var typed-var:i32 = 9;
   C.printf("typed-var is %d\n", typed-var);

   var pos:Position+; // '+' means this is allocated on the stack
   pos.x = 9;
   pos.y = 11;
   pos.go(#left);
   C.printf("position is at %d, %d\n", pos.x, pos.y);

   +dir = Direction#left;
   C.printf("direction is %s\n", dir.string());
   return 0;
}
