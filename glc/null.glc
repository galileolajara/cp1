{alias 'glc = %glc}
{at(%glc)
{{:expr-null()\expr}
   :quick-alloc-one(+(e/expr-null));
   +e-idx = :expr-push(e.base, #null);
   {return e-idx}
}
{at(\expr)
   {:wr-null(expr`/expr, w`/wtr, header:bool) @case:wr @inline;
      {+e`/expr-null = expr}
   }
   {:rd-null(e-idx`\expr, r`/rdr) @case:rd @inline;
      `:quick-alloc-one(+(e`/expr-null));
      e-idx:set(e.base, #null);
   }
   {:write-null(expr`/expr) @case:write @inline;
      {+e`/expr-null = expr}
      `.out:printf("NULL");
   }
   {:process-null(expr`/expr, ok:bool&) @case:process @inline;
      `.include-stddef = :true;
      ok = :true;
   }
   {:type-null(expr`/expr, at`\at&) @case:type @inline;
      at = `:basic-type(#ref);
   }
   {:value-null(le:this, ref:int, paren:bool, v`/value, ok:bool&) @case:value @inline;
      v.type = `:basic-type(#ref);
      v.info:init;
      v.info.array-c = 0;
      v.info.ref-v[0] = ''\0;
      v.info.star-c = 0;
      v.ref = 1;
      v.paren = :false;
      ok = :true;
   }
}
 

}
